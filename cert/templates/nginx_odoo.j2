upstream backend-odoo {
    server 127.0.0.1:8069  weight=1 fail_timeout=0;
}

server {
    listen   80;
    server_name  {{ server_name }};
    return 301 https://$server_name$request_uri;
}

server {
    server_name {{ server_name }};
    listen 443 ssl;
    ssl_protocols       SSLv3 TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers         AES128-SHA:AES256-SHA:RC4-SHA:DES-CBC3-SHA:RC4-MD5;
    ssl_certificate     {{ certbot_output_dir }}/fullchain.pem;
    ssl_certificate_key {{ certbot_output_dir }}/privkey.pem;

    access_log  /var/log/nginx/odoo.access.log;
    error_log   /var/log/nginx/odoo.error.log;

    client_max_body_size 200m;

    # increase proxy buffer size
    proxy_buffers 16 64k;
    proxy_buffer_size 128k;

    # force timeouts if the backend dies
    proxy_next_upstream error timeout invalid_header http_500 http_502 http_503;

    # enable data compression
    gzip on;
    gzip_min_length 1100;
    gzip_buffers 4 32k;
    gzip_types text/plain text/css application/javascript application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;
    gzip_vary on;
    gzip_comp_level 9;
    gzip_http_version 1.1;


    location / {
        proxy_pass http://backend-odoo;
        proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
        proxy_redirect off;

        # set headers
        proxy_set_header    Host            $host;
        proxy_set_header    X-Real-IP       $remote_addr;
        proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_x_forwarded_host;

	# Let the Odoo web service know that weâ€™re using HTTPS, otherwise
	# it will generate URL using http:// and not https://
	proxy_set_header X-Forwarded-Proto https;
	proxy_set_header X-Forwarded-Host $host;
	proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

	proxy_connect_timeout       600;
	proxy_send_timeout          600;
	proxy_read_timeout          600;
	send_timeout                600;
                
    }

    location ~* /web/static/ {
        proxy_cache_valid 200 60m;
        proxy_buffering on;
        expires 864000;
        proxy_pass http://backend-odoo;
    }


    location ~ ^/web/database/manager {
#   location ~ ^/web/database/(manager|selector) {
#      allow X.X.X.X;
       deny all;
       proxy_pass http://backend-odoo;
       expires 864000;
       proxy_cache_valid 200 60m;
       proxy_buffering on;

    }
}
